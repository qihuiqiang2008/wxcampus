var EventProxy = require('eventproxy');

var models = require('../models');
var PostEx = models.PostEx;
var User = require('./user');
var Util = require('../libs/util');
var mongoose = require('mongoose');
/**
 * 根据主题ID获取主题
 * Callback:
 * - err, 数据库错误
 * - topic, 主题
 * - author, 作者
 * - lastReply, 最后回复
 * @param {String} id 主题ID
 * @param {Function} callback 回调函数
 */

exports.newAndSave = function (word_less,sensitive,type,from_school_cn_name,from_school_en_name,image,title,content0,content1,content2,content3,content4,content5,content6,callback) {
      var postEx = new PostEx();
      postEx.type = type;
	  postEx.word_less=word_less;
	  postEx.sensitive = sensitive;
	  postEx.title = title;
      postEx.content0 = content0;
	  postEx.content1 = content1;
      postEx.content2 = content2;
	  postEx.content3 = content3;
	  postEx.content4 = content4;
      postEx.content5 = content5;
      postEx.content6 = content6;   
	  postEx.from_school_en_name = from_school_en_name;
	  postEx.from_school_cn_name = from_school_cn_name;
	  postEx.image = image;
	  postEx.image_from ="local";
      postEx.save(callback);
};

exports.newAndSaveEx=function(post,callback){
     var postEx = new PostEx();
      postEx.type = post.type;
	  postEx.common=true;
	  postEx.word_less= post.word_less;
	  postEx.sensitive =  post.sensitive;
	  postEx.title =  post.title;
      postEx.content0 =  post.content0;
	  postEx.content1 =  post.content1;
      postEx.content2 =  post.content2;
	  postEx.content3 =  post.content3;
	  postEx.content4 =  post.content4;
      postEx.content5 =  post.content5;
      postEx.content6 =  post.content6;   
	  postEx.from_school_en_name =  post.from_school_en_name;
	  postEx.from_school_cn_name =  post.from_school_cn_name;
	  postEx.image =  post.image;
	   postEx.create_at =  post.create_at;
	  postEx.image_from ="local";
      postEx.save(callback);

}


exports.getPostExById = function (id, callback) {
        PostEx.findOne({_id:id}, callback);

};

exports.getPostExsByQuery = function (query, opt, callback) {
        PostEx.find(query, [], opt, function (err, docs) {
            if (err) {
                return callback(err);
            }
            if (docs.length === 0) {
                return callback(null, []);
            }
            return callback(null,docs);
        });
};

exports.getCountByQuery = function (query, callback) {
        PostEx.count(query, callback);
};
/*
Model.find({}, [fields], {'group': 'FIELD'}, function(err, logs) {
    ...
});
*/


